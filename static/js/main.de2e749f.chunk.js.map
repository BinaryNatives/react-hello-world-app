{"version":3,"sources":["components/Header.js","components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","defaultProps","Button","text","cls","clickevnt","onClick","App","useState","buttonClicked","setToggleState","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAcMA,EAAS,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACb,OACI,wBAAQC,UAAU,YAAlB,SACI,6BAAKD,OAMjBD,EAAOG,aAAe,CAClBF,MAAO,oBAQID,QChCTI,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,UAIxB,OACI,wBAAQC,QAASD,EAAWL,UAAWI,EAAvC,SAA6CD,KAIrDD,EAAOD,aAAe,CAClBE,KAAM,SACNC,IAAK,UAGMF,QCoBAK,MA7Bf,WAAe,MAI2BC,oBAAS,GAJpC,mBAINC,EAJM,KAISC,EAJT,KAgBb,OACE,sBAAKV,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,MAAO,2BAEf,wCAAWU,EAAgB,SAAW,QAAtC,OAEA,8EAEA,cAAC,EAAD,CAAQL,IAAI,SAASD,KAAK,WAAWE,UAlBtB,WAEjBK,EAAgC,GAAjBD,GAEfE,QAAQC,IAAI,qBCHDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.de2e749f.chunk.js","sourcesContent":["//Importing Props Types\r\nimport PropTypes from 'prop-types'\r\n\r\n//Props Usage with props keyword\r\n// const Header = (props) => {\r\n//     return (\r\n//         <header>\r\n//             <h1>{props.title}</h1>\r\n//         </header>\r\n//     )\r\n// }\r\n\r\n\r\n// Props usage without props keyword\r\nconst Header = ({title}) => {\r\n    return (\r\n        <header className=\"my-header\">\r\n            <h1>{title}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\n// Default Props Value, will be used if no props value passed\r\nHeader.defaultProps = {\r\n    title: 'Hello World App.',\r\n}\r\n\r\n// Declaring props data type and making it required\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","const Button = ({text, cls, clickevnt}) => {\r\n\r\n    \r\n\r\n    return (\r\n        <button onClick={clickevnt} className={cls}>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    text: 'Button',\r\n    cls: 'my-btn',\r\n}\r\n\r\nexport default Button\r\n","import './App.css';\nimport Header from './components/Header'\nimport Button from './components/Button'\nimport React, {useState} from 'react'\n\nfunction App() {\n\n  // const buttonClicked = true\n\n  const [buttonClicked, setToggleState] = useState(false)\n\n  const changeText = () => {\n\n    setToggleState(buttonClicked == true ? false : true)\n\n    console.log('Im Clicked');\n  }\n\n\n  \n\n  return (\n    <div className=\"App\">\n      <Header title={\"Hello World React App.\"} />\n\n      <h1>Hello {buttonClicked ? \"Button\" : \"World\"}!</h1>\n\n      <h3>Click the below-button to change above-text </h3>\n\n      <Button cls='my-btn' text='Click Me' clickevnt={changeText} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}